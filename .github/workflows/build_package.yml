name: package | build and publish

on:
  workflow_call:
    inputs:
        index:
          description: which index, PyPI or TestPyPI to publish to
          required: true
          type: string
          default: TestPyPI
    # outputs:
    #   artifact-name:
    #     description: "The name of the uploaded artifact"
    #     value: "python-package-distributions"

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry install

      - name: Build a binary wheel and a source tarball
        run: poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish:
    name: Publish Python distribution to ${{ inputs.index }}
    needs:
      - build
    runs-on: ubuntu-latest

    permissions:
      id-token: write # mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Set repository URL
        id: repo-url
        run: |
          if [[ "${{ inputs.index }}" == "PyPI" ]]; then
            echo "url=https://upload.pypi.org/legacy/" >> "$GITHUB_OUTPUT"
          else
            echo "url=https://test.pypi.org/legacy/" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Set Build Config URI
        run: |
          echo "BUILD_CONFIG_URI=https://github.com/VictorAut/dupegrouper/.github/workflows/build_package.yml" >> $GITHUB_ENV
      
      - name: Publish distribution to ${{ inputs.index }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ steps.repo-url.outputs.url }}
          verbose: true
        env:
          BUILD_CONFIG_URI: ${{ env.BUILD_CONFIG_URI }}